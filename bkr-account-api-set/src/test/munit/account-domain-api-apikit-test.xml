<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="account-domain-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="${api.salesforce.get.basePath}">
        <http:request-connection host="${api.salesforce.get.host}" port="${api.salesforce.get.port}" />
    </http:request-config>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-201-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-201-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-202-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-202-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_202_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-202-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-202-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_202_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-400-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-400-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_400_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-400-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_400_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_401_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_401_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_403_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_403_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-409-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-409-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_409_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-409-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-409-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_409_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_429_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_429_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_449_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_449_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-202-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-202-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_202_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-202-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-202-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_202_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-400-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-400-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_400_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-400-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_400_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_401_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_401_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_403_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_403_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-404-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-404-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_404_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-404-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_404_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-409-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-409-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_409_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-409-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-409-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_409_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_429_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_429_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_449_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_449_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_500_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\xml:account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\xml:account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_xml.xml')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_500_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-200-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-200-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-400-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-400-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_400_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-400-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_400_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_401_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_401_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_403_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_403_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_429_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_429_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_449_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_449_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts:account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\accounts:account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-202-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-202-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_202_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-202-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-202-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_202_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_401_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_401_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_403_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_403_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-404-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-404-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_404_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-404-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_404_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_429_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_429_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_449_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_449_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_500_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\accounts\(id):account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [delete:\accounts\(id):account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="delete:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_500_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-201-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-201-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-202-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-202-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_202_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-202-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-202-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_202_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-400-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-400-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_400_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-400-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_400_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_401_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_401_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_403_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_403_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-409-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-409-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_409_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-409-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-409-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_409_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_429_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_429_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_449_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_449_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_accounts_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\xml:account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\xml:account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\xml:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_xml.xml')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/accounts">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_accounts_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-200-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-200-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_401_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_401_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_403_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_403_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-404-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-404-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-404-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_429_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_429_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_449_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_449_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\(id):account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [get:\accounts\(id):account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="get:\accounts\(id):account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-202-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-202-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_202_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-202-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-202-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(202)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 202" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_202_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-400-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-400-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_400_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-400-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_400_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-401-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-401-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_401_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-401-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-401-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_401_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-403-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-403-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_403_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-403-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-403-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="403" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(403)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 403" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_403_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-404-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-404-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_404_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-404-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_404_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-409-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-409-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_409_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-409-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-409-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="409" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(409)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 409" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_409_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-429-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-429-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_429_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-429-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-429-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="429" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(429)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 429" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_429_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-449-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-449-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_449_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-449-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-449-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="449" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(449)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 449" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_449_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-500-application\xml-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-500-application\xml]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/xml') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_500_accounts_{id}_application_xml.xml'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts\(id):application\json:account-domain-api-config-500-application\json-FlowTest" description="Verifying functionality of [put:\accounts\(id):application\json:account-domain-api-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="account-domain-api-main" />
            <munit:enable-flow-source value="put:\accounts\(id):application\json:account-domain-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_{id}_application_json.json')]" />
            <set-variable variableName="id" value="#['null']" doc:name="id" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/accounts/$(vars.id)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_500_accounts_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
